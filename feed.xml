<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://zemul.github.io/</id><title>Zemul</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-03-03T10:24:29+08:00</updated> <author> <name>周泽淼</name> <uri>https://zemul.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://zemul.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh" href="https://zemul.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 周泽淼 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>syncmapLoadOrStore</title><link href="https://zemul.github.io/posts/sync.map%E7%9A%84LoadOrStore/" rel="alternate" type="text/html" title="syncmapLoadOrStore" /><published>2021-11-03T20:55:00+08:00</published> <updated>2021-11-03T17:16:10+08:00</updated> <id>https://zemul.github.io/posts/sync.map%E7%9A%84LoadOrStore/</id> <content src="https://zemul.github.io/posts/sync.map%E7%9A%84LoadOrStore/" /> <author> <name>zemul</name> </author> <category term="Blogging" /> <category term="go" /> <summary> hello everyone ! 欢迎使用 {小书匠}(xiaoshujiang)编辑器，您可以通过 小书匠主按钮&amp;gt;模板 里的模板管理来改变新建文章的内容。 </summary> </entry> <entry><title>sync.map2Test</title><link href="https://zemul.github.io/posts/sync.map2Test/" rel="alternate" type="text/html" title="sync.map2Test" /><published>2021-11-03T15:00:00+08:00</published> <updated>2021-11-03T19:38:20+08:00</updated> <id>https://zemul.github.io/posts/sync.map2Test/</id> <content src="https://zemul.github.io/posts/sync.map2Test/" /> <author> <name>Zemul</name> </author> <category term="Test" /> <summary> 欢迎使用 {小书匠}(xiaoshujiang)编辑器，您可以通过 小书匠主按钮&amp;gt;模板 里的模板管理来改变新建文章的内容。 </summary> </entry> <entry><title>TTTTEEESSSTTT</title><link href="https://zemul.github.io/posts/Customize-the-Favicon/" rel="alternate" type="text/html" title="TTTTEEESSSTTT" /><published>2021-08-11T00:34:00+08:00</published> <updated>2021-11-03T17:08:26+08:00</updated> <id>https://zemul.github.io/posts/Customize-the-Favicon/</id> <content src="https://zemul.github.io/posts/Customize-the-Favicon/" /> <author> <name>Zemul</name> </author> <category term="Test" /> <summary> The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons. Generate the favicon Prepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image ... </summary> </entry> <entry><title>Enable Google Page Views</title><link href="https://zemul.github.io/posts/enable-google-pv/" rel="alternate" type="text/html" title="Enable Google Page Views" /><published>2021-01-04T07:32:00+08:00</published> <updated>2021-11-02T20:48:26+08:00</updated> <id>https://zemul.github.io/posts/enable-google-pv/</id> <content src="https://zemul.github.io/posts/enable-google-pv/" /> <author> <name>Dinesh Prasanth Moluguwan Krishnamoorthy</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup. Set up Google Analytics Create GA account a... </summary> </entry> <entry><title>使用io.pipe优雅的优化中间缓存</title><link href="https://zemul.github.io/posts/%E4%BD%BF%E7%94%A8io.Pipe%E4%BC%98%E9%9B%85%E7%9A%84%E4%BC%98%E5%8C%96%E4%B8%AD%E9%97%B4%E7%BC%93%E5%AD%98/" rel="alternate" type="text/html" title="使用io.pipe优雅的优化中间缓存" /><published>2020-03-02T00:00:00+08:00</published> <updated>2020-03-02T00:00:00+08:00</updated> <id>https://zemul.github.io/posts/%E4%BD%BF%E7%94%A8io.Pipe%E4%BC%98%E9%9B%85%E7%9A%84%E4%BC%98%E5%8C%96%E4%B8%AD%E9%97%B4%E7%BC%93%E5%AD%98/</id> <content src="https://zemul.github.io/posts/%E4%BD%BF%E7%94%A8io.Pipe%E4%BC%98%E9%9B%85%E7%9A%84%E4%BC%98%E5%8C%96%E4%B8%AD%E9%97%B4%E7%BC%93%E5%AD%98/" /> <author> <name>周泽淼</name> </author> <summary> 使用io.Pipe优雅的优化中间缓存 BEFORE 近期实现了一个HTTP中转文件上传/下载请求到指定存储引擎的proxy服务，主要用于过滤非法访问。期间踩了一些坑，这里分享一下，有助于理解go的I/O实现。 刚上线的文件存储proxy，发现内存占用很大，代码如下： func upload(g *gin.context){ // 获取多文件表单reader multipartReader, _ := g.Request.MultipartReader() // 获取表单中的第一个part part, _ := multipartReader.NextPart() filename := part.FileName() body := &amp;amp;bytes.Buffer{} writer := multipart.NewWriter(body) defer... </summary> </entry> </feed>
